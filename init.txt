manageQueue(Area[] area,TaxiDriver taxiDriver){
	List<Area> queue;
	Area tmp;
	for(int i=0;i<area.size();i++)
		if(taxiDriver.position € area[i])
			startingArea=i;
	if(area[startingArea].getNumberOfTaxi()<MAX)
		area[startingArea].addToQueue(taxiDriver);
	else{
		for(int i=0;i<area.size();i++)
			area[i].distance=INFINITY;
		area[startingArea].distance=0;
		queue.enqueue(area[startingArea]);
		while(!queue.isEmpty()){
			tmp=queue.dequeue();
			for(int i=0; i<tmp.adjacencies.size(); i++)
				if(tmp.adjacencies[i].getNumberOfTaxi()<AVG){
					tmp.adjacencies[i].addToQueue(taxiDriver);
					return;
					}
			
			for(int i=0; i<tmp.adjacencies.size(); i++){
				if(tmp.adjacencies[i].getNumberOfTaxi()<MAX){
					tmp.adjacencies[i].addToQueue(taxiDriver);
					return;
					}
				
				if(tmp.adjacencies[i].distance==INFINITY){
					tmp.adjacencies[i].distance=tmp.distance+1;
					queue.enqueue(tmp.adjacencies[i]);
				}				
			}
		}
	}
}